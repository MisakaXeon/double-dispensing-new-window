<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dependencies="clr-namespace:dispensing.ExDependencies"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
        <ResourceDictionary Source="IconResources.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="TextBox"  x:Key="ItemInfoBoxStyle">
        <Setter Property="dependencies:TextboxExDependency.Radius" Value="9"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource HarmonyOS_Sans_SC}"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="#E6E6E6"></Setter>
        <Setter Property="dependencies:TextboxExDependency.ContentMargin" Value="10, 0, 0, 0"></Setter>
        
        
        <Setter Property="dependencies:TextboxExDependency.Radius" Value="9"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                            CornerRadius="{Binding (dependencies:TextboxExDependency.Radius),RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid Margin="{Binding (dependencies:TextboxExDependency.ContentMargin),RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource ItemInfoBoxStyle}" x:Key="ItemUnitBoxStyle">
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
    </Style>
    
    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}" x:Key="TitlTextStyle">
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value=" #4D4D4D"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource TitlTextStyle}" x:Key="BoxUnitTextStyle">
        <Setter Property="Margin" Value="10, 0, 0, 0"></Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="DateSelectorStyle" >
        <Setter Property="FontFamily" Value="HarmonyOS_Sans_SC"></Setter>
        <Setter Property="dependencies:ButtonExDependency.Radius" Value="9"></Setter>
        <Setter Property="Background" Value="#FFFFFFFF"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderBrush" Value="#E6E6E6"></Setter>
        <Setter Property="Focusable" Value="True"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border CornerRadius="{Binding (dependencies:ButtonExDependency.Radius), 
                        RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                            x:Name="BD"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="52"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Path=Date,StringFormat='{}{0:yyyy-MM-dd}'}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"    SnapsToDevicePixels="True"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></TextBlock>

                            <Path Grid.Column="1" Data="m 12 18 l 24 0 l -12 12 l -12 -12 Z" Height="48" Width="48" Fill="#FF999999"></Path>
                            <Popup x:Name="DateSelectorDialog" StaysOpen="False" PlacementTarget="{Binding ElementName=BD}" Placement="Bottom" AllowsTransparency="True">
                                <Viewbox Width="{Binding ElementName=BD,Path=ActualWidth}">
                                    <Calendar SelectedDate="{Binding Path=DataContext.Date,ElementName=BD,Mode=TwoWay}" IsManipulationEnabled="False"  HorizontalAlignment="Stretch"></Calendar>
                                </Viewbox>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="DateSelectorDialog" Property="IsOpen" Value="True"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="DateSelectorDialog" Property="IsOpen" Value="False"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="CloseBtnStyle">
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Background" Value="#00000000"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{StaticResource CloseBtnIcon}" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Width="48" Height="48"></Image>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0, 33, 0, 0"></Setter>
    </Style>

    <Style TargetType="Button" x:Key="SaveBtnStyle" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="132"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="dependencies:ButtonExDependency.Radius" Value="9"></Setter>
        <Setter Property="Background" Value="#3377FF"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
    </Style>

    <Style TargetType="Button" x:Key="DeleteBtnStyle" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="132"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="dependencies:ButtonExDependency.Radius" Value="9"></Setter>
        <Setter Property="Background" Value="#00000000"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Foreground" Value="#FF3333"></Setter>
        <Setter Property="BorderBrush" Value="#FF3333"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
    </Style>

    <Style TargetType="Button" x:Key="CreateBtnStyle" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="210"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="dependencies:ButtonExDependency.Radius" Value="9"></Setter>
        <Setter Property="Background" Value="#00000000"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Foreground" Value="#3377FF"></Setter>
        <Setter Property="BorderBrush" Value="#3377FF"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="21, 0, 0, 0"></Setter>
    </Style>
</ResourceDictionary>